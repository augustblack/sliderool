{
  "globals" : {
    JSX: true
  },
  "extends": [ "standard", "plugin:react/recommended"],
  "parser": "babel-eslint",
    "plugins": [
      "react",
      "react-hooks"
    ],
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true
      }
    },
    "rules": {
      "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
      "react-hooks/exhaustive-deps": "warn" // Checks effect dependencies
    },
    "overrides": [{
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": "./tsconfig.json", // Required to have rules that rely on Types.
        "tsconfigRootDir": "./"
      },
      "extends": [
        "plugin:@typescript-eslint/recommended", // Out of the box Typescript rules
        "standard" // Out of the box StandardJS rules
      ],
      "plugins": [
        "@typescript-eslint", // Lets us override rules below.
        "react",
        "react-hooks"
      ],
      "rules": {
        "no-unused-vars": "off", // turn off unused vars on js
        "@typescript-eslint/no-unused-vars": "error", // turn on unused vars in ts
        "@typescript-eslint/indent": "off", // This is the job of StandardJS, they are competing rules so we turn off the Typescript one.
        "react-hooks/rules-of-hooks": "error", // Checks rules of Hooks
        "react-hooks/exhaustive-deps": "warn", // Checks effect dependencies
        "no-use-before-define": [0],
        "@typescript-eslint/no-use-before-define": [1]
      },
      "settings": {
        "react": { "version": "detect" }
      }

    }]
}
